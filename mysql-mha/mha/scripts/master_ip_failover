#!/usr/bin/env perl

use Getopt::Long;

# 옵션 변수 선언
my (
    $command,        $ssh_user,         $orig_master_host,
    $orig_master_ip, $orig_master_port, $new_master_host,
    $new_master_ip,  $new_master_port,  $new_master_user,
    $new_master_password
);

# VIP 및 네트워크 설정 변수
# VIP 변수를 정의하고, 그 안에 있는 VIP와 네트워크 포트 이름을 변경해야 합니다.
my $vip       = '192.168.56.105';
my $netmask   = '255.255.255.0';
my $broadcast = '192.168.56.255';
my $key       = "0";

# SSH 명령어 변수
my $ssh_start_vip    = "sudo ifconfig enp0s8:$key $vip netmask $netmask broadcast $broadcast up";
my $ssh_stop_vip     = "sudo ifconfig enp0s8:$key down";
my $ssh_mac_refresh  = "sudo arping -c 4 -A -I enp0s8:$key $vip";

# 옵션 파싱
GetOptions(
    'command=s'             => \$command,
    'ssh_user=s'            => \$ssh_user,
    'orig_master_host=s'    => \$orig_master_host,
    'orig_master_ip=s'      => \$orig_master_ip,
    'orig_master_port=i'    => \$orig_master_port,
    'new_master_host=s'     => \$new_master_host,
    'new_master_ip=s'       => \$new_master_ip,
    'new_master_port=i'     => \$new_master_port,
    'new_master_user=s'     => \$new_master_user,
    'new_master_password=s' => \$new_master_password,
);

# main 함수 호출
exit main();

sub main {

    print "\n\nIN SCRIPT TEST====$ssh_stop_vip==$ssh_start_vip===\n\n";

    # stop 또는 stopssh 명령 처리
    if ( $command eq "stop" || $command eq "stopssh" ) {
        print $command;

        my $exit_code = 1;
        eval {
            print "Disabling the VIP on old master: $orig_master_host \n";
            stop_vip();
            $exit_code = 0;
        };
        if ($@) {
            warn "Got Error: $@\n";
            exit $exit_code;
        }
        exit $exit_code;
    }
    # start 명령 처리
    elsif ( $command eq "start" ) {
        my $exit_code = 10;
        eval {
            print "Enabling the VIP - $vip on the new master - $new_master_host \n";
            start_vip();
            $exit_code = 0;
        };
        if ($@) {
            warn $@;
            exit $exit_code;
        }
        exit $exit_code;
    }
    # status 명령 처리
    elsif ( $command eq "status" ) {
        print "Checking the Status of the script.. OK \n";
        `ssh -p 22 $ssh_user\@$orig_master_host \" $ssh_start_vip \"`;
        exit 0;
    }
    # 잘못된 명령일 경우 사용법 출력
    else {
        usage();
        exit 1;
    }
}

# 새로운 마스터에서 VIP 활성화하는 함수
sub start_vip {
    `ssh -p 22 $ssh_user\@$new_master_host \" $ssh_start_vip \"`;
    `ssh -p 22 $ssh_user\@$new_master_host \" $ssh_mac_refresh\"`;
}

# 이전 마스터에서 VIP 비활성화하는 함수
sub stop_vip {
    `ssh -p 22 $ssh_user\@$orig_master_host \" $ssh_stop_vip \"`;
}

# 사용법 출력 함수
sub usage {
    print
"Usage: master_ip_failover --command=start|stop|stopssh|status --orig_master_host=host --orig_master_ip=ip --orig_master_port=port --new_master_host=host --new_master_ip=ip --new_master_port=port\n";
}
